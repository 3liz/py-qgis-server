# Copyright (c) 2020 3liz
---
config_options:
    #=========
    # Server
    #=========
    - name: SERVER_HTTP_PORT
      label: Port
      description: Port to listen to
      default: '8080'
      type: int
      key: port
      section: server
      tags: [ http ]

    - name: SERVER_INTERFACES
      label: Interfaces
      description: Interfaces to listen to
      default: '0.0.0.0'
      section: server
      key: interfaces
      tags: [ http ]

    - name: SERVER_TIMEOUT
      label: Client Timeout
      description: |
          Set the timeout for Qgis response in seconds. If a Qgis worker takes more than 
          the corresponding value a timeout error (504) is returned to the client.
      default: 20
      type: int
      section: server
      key: timeout
      tags: [ http ]

    - name: SERVER_WORKERS
      label: Number of workers
      description: The number of workers for processing requests
      default: '2'
      type: int
      section: server
      key: workers
      tags: [ workers ]

    - name: SERVER_ENABLE_FILTERS
      label: Enable filters
      description: Enable filters as python extension
      default: 'yes'
      type: boolean
      section: server
      key: enable_filters
      tags: [ filters ]

    - name: SERVER_HTTP_PROXY
      label: http proxy
      description: Indicates that the server is behind a reverse proxy
      default: 'no'
      section: server
      key: http_proxy
      type: boolean
      tags: [ http, proxy ]

    - name: SERVER_PROXY_URL
      label: Proxy URL
      description: |
          The url that must be seen by the client when the server is behind a proxy.
          Note that this option will be overridden by `QGIS_SERVER_<SERVICE>_URL` or 
          by `X-Qgis-<service>-Url` headers.
      default: ''
      section: server
      key: proxy_url
      tags: [ http, proxy ]

    - name: SERVER_RESTARTMON
      label: Restart test file
      description: |
          The file to watch for restarting workers. When the modified date of the file is changed.
          a restart command is broadcasted to the workers. Note that workers processes are restarted 
          without dropping requests.
      default: ''
      section: server
      key: restartmon
      type: path
      tags: [ workers ]

    - name: SERVER_PLUGINPATH
      label: Plugin paths
      description: The path to qgis server plugins
      default: ''
      section: server
      key: pluginpath
      tags: [ qgis, plugins ]
      alt_env: QGIS_PLUGINPATH
      type: path

    - name: SERVER_SSL
      label: Enable SSL
      description: Enable SSL endpoint
      default: 'no'
      type: boolean
      tags: [ http, ssl ]
      section: server
      key: ssl

    - name: SERVER_SSL_CERT
      label: SSL Certificat
      description: Path to the SSL certificat file
      default: ''
      tags: [ http, ssl, security ]
      section: server
      key: ssl_cert
      type: path

    - name: SERVER_SSL_KEY
      label: SSL Certificat
      description: Path to the SSL key file
      default: ''
      tags: [ http, ssl, security ]
      section: server
      key: ssl_key
      type: path

    - name: SERVER_CROSS_ORIGIN
      label: Allows cross origin CORS
      description: |
          Allows any origin for CORS. If set to 'no', allow only CORS for the 'Origin'
          header.
      default: 'no'
      type: boolean
      section: server
      key: cross_origin
      tags: [ http, security ]

    - name: SERVER_MEMORY_HIGH_WATER_MARK
      label: Memory high water mark
      description: |
          Set memory high water mark as fraction of total memory. Workers are 
          restarted if total memory percent usage of workers exceed that value.
      default: 0.9
      type: float
      section: server
      key: memory_high_water_mark
      tags: [ workers, memory ]
      version_added: '1.8.0'

    - name: SERVER_GETFEATURELIMIT
      label: Define default WFS/GetFeature limit
      description: |
          Define default limit for WFS/GetFeature requests.
          A negative value set no limit; this may be a concern
          with requests returning a high number of values.
      default: -1
      type: int
      section: server
      key: getfeaturelimit
      tags: [ ows, memory ]
      version_added: '1.8.1'

    - name: SERVER_ALLOW_HEADERS
      label: Define headers that will be forwarded to Qgis server worker
      description: |
         Set the headers - as comma separated header prefix - that will be
         forwarded to the Qgis server worker. This may be useful if you
         have plugins that may deal with request headers.
      default: 'X-Qgis-,X-Lizmap-'
      section: server
      key: allow_headers
      tags: [ http, header, plugin ]
      version_added: '1.8.8'

    #==========
    # Logging
    #==========
    - name: LOGGING_LEVEL
      label: Logging level
      description: Set the logging level
      type: [DEBUG,INFO,WARNING,ERROR,CRITICAL]
      default: DEBUG
      section: logging
      key: level
      tags: [ logging ]

    - name: QGIS_INFO
      label: Log Qgis 'Info'
      description: Log out qgis 'Info' message logs
      type: boolean
      default: 'no'
      section: logging
      key: level
      tags: [ logging ]

    #===============
    # Project cache
    #===============

    - name: CACHE_SIZE
      label: Cache size
      description: |
         The maximal number of Qgis projects held in cache. The cache strategy is LRU.
      default: '10'
      type: int
      section: projects.cache
      key: size
      tags: [ qgis, cache ]

    - name: CACHE_ROOTDIR
      label: Projects directory
      description: |
          The directory location for Qgis project files.
      tags: [ qgis, cache ]
      type: path
      section: projects.cache
      key: rootdir

    - name: CACHE_STRICT_CHECK
      label: Enable strict checking
      description: |
          Activate strict checking of project layers. When enabled, Qgis projects
          with invalid layers will be dismissed and an 'Unprocessable Entity' (422) HTTP error
          will be issued.
      default: 'yes'
      type: boolean
      section: projects.cache
      key: strict_check
      tags: [ qgis, cache ]

    - name: CACHE_INSECURE
      label: Insecure cache mode
      description: |
          Enable or disable the insecure cache mode. The insecure cache mode allow scheme handlers
          to enable or disable some features considered harmful. See the handler's description
          for the limitations induced in secure mode.
      type: boolean
      default: 'no'
      section: projects.cache
      key: insecure
      tags: [ cache, security ]

    - name: TRUST_LAYER_METADATA
      label: Trust layer metadata
      description: |
           Trust layer metadata. Improves layer load time by skipping expensive checks 
           like primary key unicity, geometry type and 
           srid and by using estimated metadata on layer load. Since QGIS 3.16.
      type: boolean
      default: 'no'
      section: projects.cache
      key: trust_layer_metadata
      tags: [ cache ]
      alt_env: QGIS_SERVER_TRUST_LAYER_METADATA
      version_added: "1.4"

    - name: DISABLE_GETPRINT
      label: Disable print
      description: |
           Don't load print layouts. Improves project read time if layouts are not required, 
           and allows projects to be safely read in background threads (since print layouts are 
           not thread safe).
      type: boolean
      default: 'no'
      section: projects.cache
      key: disable_getprint
      tags: [ cache ]
      alt_env: QGIS_SERVER_DISABLE_GETPRINT
      version_added: "1.4"

    - name: CACHE_PRELOAD_CONFIG
      label: Preload cache configuration
      description: |
          Path to configuration file for preloading projects. The file must have one project uri 
          per line. Each uri is similar to the project uri passed in the 'MAP' query parameter
          of OWS requests.
          Preloaded projects are stored in a static cache, i.e they are not subject to lru eviction.
      type: path
      default: ''
      section: projects.cache
      key: preload_config
      tags: [ cache ]
      version_added: "1.4"

    - name: CACHE_DISABLE_OWSURLS
      label: Disable ows urls defined in projects
      description: |
          Disable ows urls defined in projects. This may be necessary because Qgis projects
          urls override proxy urls.
      type: boolean
      default: 'no'
      section: projects.cache
      key: disable_owsurls
      tags: [ cache, http ]
      version_added: "1.5.4"

    - name: CACHE_FORCE_ETAG
      label: Force etag header for OWS 'GetCapabilities' requests
      description: |
          Force etag header even if 'TRUST_LAYER_METADATA' is not set.
          By default etags are set only when 'TRUST_LAYER_METADATA' is set because
          capabilities rely only on qgis project data and not on the underlying layer
          data.
      type: boolean
      default: 'no'
      section: projects.cache
      key: force_etag
      tags: [ cache, http ]
      version_added: "1.7.13"

    - name: CACHE_DEFAULT_HANDLER
      label: Default handler for cache manager
      description: |
          Set the default handler for MAP parameters
      type: string
      default: ''
      section: projects.cache
      key: preload_config
      tags: [ cache ]

    - name: CACHE_ALLOW_STORAGE_SCHEMES
      label: Allowed project storage schemes
      description: |
          Restrict authorized project storage scheme for projects uri to
          those listed - The value must be a comma separated list of allowed
          schemes. The value '*' allow any scheme.
          Note that aliases are resolved before applying restrictions.
      type: str
      default: '\*'
      section: projects.cache
      key: allow_storage_schemes
      tags: [ cache, qgis, security ]

    - name: CACHE_CHECK_INTERVAL
      label: Interval in s between cache checking
      type: int
      description: |
          Set the time interval in seconds between two check for invalidation/refresh of the cache content.
          If set to a value > 0 then the cache is checked for invalidation/refresh asynchronously every 
          seconds defined by the option.
          If set to 0 (or negative value), the cache is checked for invalidation synchronously at each request. 
          When set to 0 with slow projects to load, user may experience latency, so it is recommended
          to use asynchronous check with such projects in conjunction with a static cache.
      default: 0
      section: projects.cache
      key: refresh_interval


    #===============
    # Qgis API
    #===============

    - name: API_ENABLED_LANDING_PAGE
      label: Enable qgis landing page api
      description: |
          Enable access to qgis 'landing page' api
      type: boolean
      default: 'no'
      section: api.enabled
      key: landing_page
      tags: [ http, qgis, api ]
      version_added: "1.7.2"

    - name: API_ENDPOINTS_LANDING_PAGE
      label: Set the 'landing page' uri endpoint
      description: |
          Define endpoint access to the 'landing page' service
      type: str
      default: '/ows/catalog'
      section: api.endpoints
      key: landing_page
      tags: [ http, qgis, api ]
      version_added: "1.7.2"

    - name: API_ENABLED_LIZMAP
      label: Enable access to the Lizmap API
      description: |
          Enable access to the Lizmap API
      type: boolean
      default: 'no'
      section: api.enabled
      key: lizmap_api
      tags: [ http, qgis, api ]
      version_added: "1.8.4"

    - name: API_ENDPOINTS_LIZMAP
      label: Define endpoint access to the Lizmap API
      description: |
          Define endpoint access to the Lizmap API
      type: str
      default: '/lizmap'
      section: api.endpoints
      key: lizmap_api
      tags: [ http, qgis, api ]
      version_added: "1.8.4"

    #===============
    # Management API
    #===============

    - name: MANAGEMENT_ENABLED
      label: Enable management API
      description: |
        Activate management API service. The management API is REST api for controlling and inspecting
        the server behavior, plugins and cached projects.
        Starting from 1.7.0, this is a experimental feature and will be subject to change. The api will
        be considered as 'stable' from the 1.8.0 version.
      type: boolean
      default: "no"
      section: management
      key: enabled
      tags: [ management ]
      version_added: "1.7.0"

    - name: MANAGEMENT_INTERFACES
      label: API interfaces
      description: |
          Network interfaces to listen to. The management API service will listen on this interface
      default: "127.0.0.1"
      section: management
      key: interfaces
      tags: [ http, management ]
      version_added: "1.7.0"

    - name: MANAGEMENT_PORT
      label: Port
      description: Port to listen to
      default: '19876'
      type: int
      key: port
      section: management
      tags: [ http, management ]

    - name: MANAGEMENT_SSL
      label: Enable SSL
      description: Enable SSL endpoint for API management
      default: 'no'
      type: boolean
      tags: [ http, ssl, management ]
      section: management
      key: ssl

    - name: MANAGEMENT_SSL_CERT
      label: SSL Certificat
      description: Path to the SSL certificat file for the management API
      default: ''
      tags: [ http, ssl, security, management ]
      section: management
      key: ssl_cert
      type: path

    - name: MANAGEMENT_SSL_KEY
      label: SSL Certificat
      description: Path to the SSL key file for the management API
      default: ''
      tags: [ http, ssl, security, management ]
      section: management
      key: ssl_key
      type: path
